[{"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"1","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"2","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\nav\\navbar.tsx":"3","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"4","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\index.tsx":"7","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts":"8","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"12","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"13","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14"},{"size":3320,"mtime":1609626367391,"results":"15","hashOfConfig":"16"},{"size":1665,"mtime":1609627475812,"results":"17","hashOfConfig":"16"},{"size":1061,"mtime":1609502473103,"results":"18","hashOfConfig":"16"},{"size":1989,"mtime":1609589099399,"results":"19","hashOfConfig":"16"},{"size":572,"mtime":1609680675174,"results":"20","hashOfConfig":"16"},{"size":1988,"mtime":1609681080727,"results":"21","hashOfConfig":"16"},{"size":575,"mtime":1609501977185,"results":"22","hashOfConfig":"16"},{"size":425,"mtime":1606477932152,"results":"23","hashOfConfig":"16"},{"size":1358,"mtime":1609258615952,"results":"24","hashOfConfig":"16"},{"size":372,"mtime":1609259679108,"results":"25","hashOfConfig":"16"},{"size":4273,"mtime":1609680990886,"results":"26","hashOfConfig":"16"},{"size":369,"mtime":1609626737895,"results":"27","hashOfConfig":"16"},{"size":262,"mtime":1609627825560,"results":"28","hashOfConfig":"16"},{"size":1581,"mtime":1609681851928,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mwzdl7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["61"],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\nav\\navbar.tsx",["62"],"import React, {FC, useContext} from 'react';\r\nimport {Button, Container, Menu} from \"semantic-ui-react\";\r\nimport ActivityStore from '../../app/stores/activityStore'\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar: FC = () => {\r\n    const activityStore = useContext(ActivityStore);\r\n    return (\r\n        <Menu fixed={\"top\"} inverted>\r\n            <Container>\r\n                <Menu.Item header as={NavLink} exact to='/' >\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}></img>\r\n                    Reactivities\r\n                </Menu.Item>\r\n                <Menu.Item name='Activities' as={NavLink} to='/activities'/>\r\n                <Menu.Item>\r\n                    <Button onClick={activityStore.openCreateForm} type=\"button\" positive as={NavLink} to='/createActivity'\r\n                            content='Create Activity'></Button>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    );\r\n};\r\n\r\nexport default observer(Navbar)",["63","64"],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["65"],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["66","67"],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["68","69"],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],{"ruleId":"70","severity":1,"message":"71","line":38,"column":8,"nodeType":"72","endLine":38,"endColumn":85,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":5,"column":9,"nodeType":"76","messageId":"77","endLine":5,"endColumn":13},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":14,"column":26,"nodeType":"76","messageId":"77","endLine":14,"endColumn":48},{"ruleId":"78","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"74","severity":1,"message":"85","line":8,"column":7,"nodeType":"76","messageId":"77","endLine":8,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":35,"column":1,"nodeType":"88","endLine":37,"endColumn":3},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activity.id.length'. Either include it or remove the dependency array.","ArrayExpression",["89"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'cancelSelectedActivity' is assigned a value but never used.",["90"],["91"],"'axiosConfig' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"92","fix":"93"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [loadActivity, clearActivity, match.params.id, initialFormState, setActivity, activity.id.length]",{"range":"94","text":"95"},[1211,1288],"[loadActivity, clearActivity, match.params.id, initialFormState, setActivity, activity.id.length]"]