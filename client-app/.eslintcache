[{"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"1","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"2","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\nav\\navbar.tsx":"3","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"4","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\index.tsx":"7","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts":"8","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"12","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"13","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"15","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"16","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"17","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"18","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"19","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx":"20","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx":"21","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx":"22","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx":"23","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"24","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts":"25","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx":"26","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts":"27","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"28","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"29","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"30","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"31","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts":"32","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx":"33","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx":"34","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx":"35","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePage.tsx":"36","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx":"37","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileContent.tsx":"38","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\profileStore.ts":"39","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx":"40","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx":"41","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetDropzone.tsx":"42","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetCropper.tsx":"43","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileAbout.tsx":"44"},{"size":6661,"mtime":1611044877571,"results":"45","hashOfConfig":"46"},{"size":2443,"mtime":1613392763229,"results":"47","hashOfConfig":"46"},{"size":1911,"mtime":1613281061111,"results":"48","hashOfConfig":"46"},{"size":1660,"mtime":1612691881804,"results":"49","hashOfConfig":"46"},{"size":1042,"mtime":1612264349422,"results":"50","hashOfConfig":"46"},{"size":1118,"mtime":1612264727475,"results":"51","hashOfConfig":"46"},{"size":920,"mtime":1610069361511,"results":"52","hashOfConfig":"46"},{"size":425,"mtime":1606477932152,"results":"53","hashOfConfig":"46"},{"size":3614,"mtime":1613468702167,"results":"54","hashOfConfig":"46"},{"size":372,"mtime":1609259679108,"results":"55","hashOfConfig":"46"},{"size":9612,"mtime":1613651631391,"results":"56","hashOfConfig":"46"},{"size":1839,"mtime":1612243186004,"results":"57","hashOfConfig":"46"},{"size":262,"mtime":1609680675163,"results":"58","hashOfConfig":"46"},{"size":3000,"mtime":1613205385994,"results":"59","hashOfConfig":"46"},{"size":2686,"mtime":1613205595846,"results":"60","hashOfConfig":"46"},{"size":1954,"mtime":1611043902674,"results":"61","hashOfConfig":"46"},{"size":3330,"mtime":1613573064432,"results":"62","hashOfConfig":"46"},{"size":1997,"mtime":1612705276749,"results":"63","hashOfConfig":"46"},{"size":622,"mtime":1609925844866,"results":"64","hashOfConfig":"46"},{"size":925,"mtime":1613474242793,"results":"65","hashOfConfig":"46"},{"size":898,"mtime":1610015140081,"results":"66","hashOfConfig":"46"},{"size":999,"mtime":1610022647035,"results":"67","hashOfConfig":"46"},{"size":1258,"mtime":1610105097614,"results":"68","hashOfConfig":"46"},{"size":346,"mtime":1610022647086,"results":"69","hashOfConfig":"46"},{"size":1010,"mtime":1612703732098,"results":"70","hashOfConfig":"46"},{"size":2068,"mtime":1612264571717,"results":"71","hashOfConfig":"46"},{"size":862,"mtime":1613206967999,"results":"72","hashOfConfig":"46"},{"size":1116,"mtime":1613560384285,"results":"73","hashOfConfig":"46"},{"size":1868,"mtime":1612263835404,"results":"74","hashOfConfig":"46"},{"size":874,"mtime":1611659849341,"results":"75","hashOfConfig":"46"},{"size":1158,"mtime":1612264727459,"results":"76","hashOfConfig":"46"},{"size":606,"mtime":1611661715709,"results":"77","hashOfConfig":"46"},{"size":815,"mtime":1612264183078,"results":"78","hashOfConfig":"46"},{"size":2373,"mtime":1612264592842,"results":"79","hashOfConfig":"46"},{"size":796,"mtime":1612617648283,"results":"80","hashOfConfig":"46"},{"size":1311,"mtime":1613470146448,"results":"81","hashOfConfig":"46"},{"size":2221,"mtime":1613391868700,"results":"82","hashOfConfig":"46"},{"size":784,"mtime":1613470326907,"results":"83","hashOfConfig":"46"},{"size":4082,"mtime":1613473256420,"results":"84","hashOfConfig":"46"},{"size":3715,"mtime":1613392646757,"results":"85","hashOfConfig":"46"},{"size":2472,"mtime":1613390033826,"results":"86","hashOfConfig":"46"},{"size":1146,"mtime":1613392839864,"results":"87","hashOfConfig":"46"},{"size":731,"mtime":1613390033835,"results":"88","hashOfConfig":"46"},{"size":4334,"mtime":1613474431476,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"4c80u6",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],["183","184"],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\nav\\navbar.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["185"],"import axios, {AxiosResponse} from 'axios';\r\nimport {IActivity} from \"../models/activity\";\r\nimport {history} from \"../../index\";\r\nimport {toast} from \"react-toastify\";\r\nimport {IUser, IUserFormValues} from \"../models/User\";\r\nimport {IPhoto, IProfile, IProfileFormValues} from \"../models/Profile\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst axiosConfig = {\r\n    headers: {\r\n        'Content-Type': 'application/json; charset=UTF-8',\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    }\r\n};\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = window.localStorage.getItem('jwt');\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n})\r\n\r\naxios.interceptors.response.use(undefined, error => {\r\n    if (error.message === 'Network Error' && !error.response) {\r\n        toast.error('Network Error - Please, make sure API is running!')\r\n    }\r\n    const {status, data, config} = error.response;\r\n    if (status === 404) {\r\n        history.push('/notFound');\r\n    }\r\n    if (status === 400 && config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n        history.push('/notFound')\r\n    }\r\n    if (status === 500) {\r\n        toast.error('Server error - Please, check the terminal for more info!');\r\n    }\r\n    throw error.response;\r\n})\r\n\r\nconst responseBody = (response: AxiosResponse) => response ? response.data : [];\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) => new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst request = {\r\n    get: (url: string) => axios.get(url, axiosConfig).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body, axiosConfig).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body, axiosConfig).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url, axiosConfig).then(sleep(1000)).then(responseBody),\r\n    postForm: (url: string, file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append('File', file);\r\n        return axios.post(url, formData, {\r\n            headers: {'Content-type': 'multipart/form-data'}\r\n        }).then(responseBody);\r\n    }\r\n\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => request.get('/activities/'),\r\n    details: (id: string) => request.get('/activities/' + id),\r\n    create: (activity: IActivity) => request.post('/activities/', activity),\r\n    update: (activity: IActivity) => request.put('/activities/' + activity.id, activity),\r\n    delete: (id: string) => request.del(`/activities/${id}`),\r\n    attendee: (id: string) => request.post(`/activities/${id}/attend`, {}),\r\n    unattend: (id: string) => request.del(`/activities/${id}/attend`),\r\n\r\n}\r\n\r\nconst User = {\r\n    current: (): Promise<IUser> => request.get('user/'),\r\n    login: (user: IUserFormValues): Promise<IUser> => request.post(`/user/login`, user),\r\n    register: (user: IUserFormValues): Promise<IUser> => request.post(`/user/register`, user)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string): Promise<IProfile> => request.get(`/profiles/${username}`),\r\n    uploadPhoto: (photo: Blob): Promise<IPhoto> => request.postForm(`/photos`, photo),\r\n    setMainPhoto: (id: string) => request.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => request.del(`/photos/${id}`),\r\n    updateProfile: (profile: IProfileFormValues): Promise<IProfile> => request.put(`/profiles`, profile)\r\n}\r\n\r\n\r\nexport default {\r\n    Activities,\r\n    User,\r\n    Profiles\r\n};","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",["186"],"import React, {createContext, useContext} from 'react';\r\nimport {Button, Header, Image, Item, Segment} from \"semantic-ui-react\";\r\nimport {IActivity} from \"../../../app/models/activity\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {format} from 'date-fns';\r\nimport {RootStoreContext} from \"../../../app/stores/rootStore\";\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface IProps {\r\n    activity: IActivity;\r\n}\r\n\r\nconst ActivityDetailedHeader: React.FC<IProps> = ({activity}) => {\r\n\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {attendActivity, cancelAttendance, loading} = rootStore.activityStore;\r\n\r\n    const host = activity.attendees.filter(x => x.isHost)[0];\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{padding: '0'}}>\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment basic style={activityImageTextStyle}>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date, 'eeee do MMMM')}</p>\r\n                                <p>\r\n                                    Hosted by <Link to={`profile/${host.username}`}><strong>{host.displayName}</strong></Link>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <Button as={Link} to={`/manage/${activity.id}`} color='orange' floated='right'>\r\n                        Manage Event\r\n                    </Button>\r\n                ) : activity.isGoing ? (\r\n                    <Button loading={loading} onClick={cancelAttendance}>Cancel attendance</Button>\r\n                ) : (\r\n                    <Button loading={loading} onClick={attendActivity} color='teal'>Join Activity</Button>\r\n                )}\r\n\r\n            </Segment>\r\n        </Segment.Group>\r\n    );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextInput.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\modalStore.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePage.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileHeader.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileContent.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\stores\\profileStore.ts",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx",["187","188"],"import React, {useContext, useState} from 'react';\r\nimport {Button, ButtonGroup, Card, Grid, Header, Image, Tab} from \"semantic-ui-react\";\r\nimport {RootStoreContext} from \"../../app/stores/rootStore\";\r\nimport {PhotoUploadWidget} from \"../../app/common/photoUpload/PhotoUploadWidget\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {profile, isCurrentUser, uploadPhoto, uploadingPhoto, setMainPhoto, loading, deletePhoto} = rootStore.profileStore;\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target, setTarget] = useState<string | undefined>(undefined);\r\n    const [deleteTarget, setDeleteTarget] = useState<string | undefined>(undefined);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16} style={{paddingBottom: 0}}>\r\n                    <Header floated={\"left\"} icon={'image'} content={'Photos'}/>\r\n                    {isCurrentUser &&\r\n                    <Button floated={\"right\"}\r\n                            basic\r\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n                    />\r\n                    }\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={uploadPhoto} loading={uploadingPhoto} setAddPhotoMode={setAddPhotoMode}/>\r\n                    ) : <Card.Group itemsPerRow={5}>\r\n                        {profile && profile.photos.map(photo => (\r\n                            <Card key={photo.id}>\r\n                                <Image src={photo.url}/>\r\n                                {isCurrentUser &&\r\n                                <ButtonGroup fluid widths={2}>\r\n                                    <Button\r\n                                        name={photo.id}\r\n                                        id={photo.id}\r\n                                        onClick={(e) => {\r\n                                            setMainPhoto(photo);\r\n                                            setTarget(e.currentTarget.name)\r\n                                        }}\r\n                                        basic\r\n                                        positive\r\n                                        content={'Main'}\r\n                                        loading={loading && target == photo.id}\r\n                                        disabled={photo.isMain}\r\n                                    />\r\n                                    <Button\r\n                                        name={photo.id}\r\n                                        id={photo.id}\r\n                                        onClick={(e) => {\r\n                                            deletePhoto(photo);\r\n                                            setDeleteTarget(e.currentTarget.name)\r\n                                        }}\r\n                                        basic\r\n                                        negative\r\n                                        icon={'trash'}\r\n                                        loading={loading && deleteTarget == photo.id}\r\n                                        disabled={photo.isMain}\r\n                                    />\r\n                                </ButtonGroup>\r\n                                }\r\n                            </Card>\r\n                        ))}\r\n                    </Card.Group>\r\n                    }\r\n\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoUploadWidget.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetDropzone.tsx",[],"C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\app\\common\\photoUpload\\PhotoWidgetCropper.tsx",["189"],"import React, {FC, Props, useRef, useState} from 'react';\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport {Cropper} from 'react-cropper';\r\n\r\ninterface IProps {\r\n    setImage: (file: Blob) => void;\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nconst PhotoWidgetCropper: FC<IProps> = ({setImage, imagePreview, setCropper}) => {\r\n        // const [cropper, setCropper] = useState<Cropper>();\r\n        // const cropper = useRef<Cropper>(null);\r\n        // const cropperRef = useRef<HTMLImageElement>(null);\r\n\r\n        // function cropImage() {\r\n        //     // if (cropper && cropper.current) {\r\n        //     //     cropper.current.getCroppedCanvas().toBlob((blob: any) => {\r\n        //     //         setImage(blob);\r\n        //     //     }, 'image/blob');\r\n        //\r\n        //     const imageElement: any = cropperRef?.current;\r\n        //     const cropper: any = imageElement?.cropper;\r\n        //     cropper.getCroppedCanvas().toBlob((blob: any) => {\r\n        //         setImage(blob);\r\n        //     }, 'image/blob');\r\n        //\r\n        // }\r\n\r\n        return (\r\n            <Cropper\r\n                // ref={cropper}\r\n                src={imagePreview}\r\n                style={{height: 200, width: '100%'}}\r\n                // @ts-ignore\r\n                initialAspectRatio={1}\r\n                aspectRatio={1}\r\n                preview='.img-preview'\r\n                guides={false}\r\n                viewMode={1}\r\n                autoCropArea={1}\r\n                background={false}\r\n                onInitialized={cropper => setCropper(cropper)}\r\n            />\r\n        );\r\n    }\r\n;\r\n\r\nexport default PhotoWidgetCropper;\r\n","C:\\projetos\\2020\\udemy\\Reactivities\\client-app\\src\\features\\profiles\\ProfileAbout.tsx",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":88,"column":1,"nodeType":"196","endLine":92,"endColumn":3},{"ruleId":"197","severity":1,"message":"198","line":1,"column":16,"nodeType":"199","messageId":"200","endLine":1,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":46,"column":68,"nodeType":"203","messageId":"204","endLine":46,"endColumn":70},{"ruleId":"201","severity":1,"message":"202","line":59,"column":74,"nodeType":"203","messageId":"204","endLine":59,"endColumn":76},{"ruleId":"197","severity":1,"message":"205","line":1,"column":28,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]